{"ast":null,"code":"module.exports = function (utils, adapter) {\n  var Presenter;\n\n  Presenter = function () {\n    var buildLinks;\n\n    class Presenter {\n      constructor() {\n        let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.scope = scope;\n      }\n\n      id(instance) {\n        return this.constructor.adapter.id(instance);\n      }\n\n      selfLinks(instance) {}\n\n      links() {}\n\n      relationships() {}\n\n      attributes(instance) {\n        var attributes, key, relationships;\n\n        if (instance == null) {\n          return null;\n        }\n\n        attributes = utils.clone(this.constructor.adapter.get(instance));\n        delete attributes['id'];\n        relationships = this.relationships();\n\n        for (key in relationships) {\n          delete attributes[key];\n        }\n\n        return attributes;\n      }\n\n      includeRelationships(scope, instance) {\n        var data, factory, key, presenter, relationships, results;\n        relationships = this.relationships();\n        results = [];\n\n        for (key in relationships) {\n          factory = relationships[key] || function () {\n            throw new Error(`Presenter for ${key} in ${this.type} is not defined`);\n          }.call(this);\n\n          presenter = new factory(scope);\n          data = this.constructor.adapter.get(instance, key);\n\n          if (data != null) {\n            results.push(presenter.toJSON(data, {\n              include: true\n            }));\n          } else {\n            results.push(void 0);\n          }\n        }\n\n        return results;\n      }\n\n      buildRelationships(instance) {\n        var build, buildData, data, key, links, presenter, relationships, rels;\n\n        if (instance == null) {\n          return null;\n        }\n\n        rels = this.relationships();\n        links = this.links(instance) || {};\n        relationships = null;\n\n        for (key in rels) {\n          data = this.constructor.adapter.get(instance, key);\n          presenter = rels[key];\n\n          buildData = d => {\n            return data = {\n              id: this.constructor.adapter.id(d),\n              type: presenter.prototype.type\n            };\n          };\n\n          build = d => {\n            var rel;\n            rel = {};\n\n            if (d != null) {\n              rel.data = buildData(d);\n            }\n\n            if (links[key] != null) {\n              rel.links = buildLinks(links[key]);\n            } else if (d == null) {\n              rel.data = null;\n            }\n\n            return rel;\n          };\n\n          relationships || (relationships = {});\n          relationships[key] || (relationships[key] = {});\n\n          if (data instanceof Array) {\n            relationships[key].data = data.map(buildData);\n\n            if (links[key] != null) {\n              relationships[key].links = buildLinks(links[key]);\n            }\n          } else {\n            relationships[key] = build(data);\n          }\n        }\n\n        return relationships;\n      }\n\n      buildSelfLink(instance) {\n        return buildLinks(this.selfLinks(instance));\n      }\n\n      toJSON(instanceOrCollection) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var added, base, base1, base2, collection, instance, links, model, relationships;\n\n        if (options.meta != null) {\n          this.scope.meta = options.meta;\n        }\n\n        if (options.links != null) {\n          this.scope.links = options.links;\n        }\n\n        (base = this.scope).data || (base.data = null);\n\n        if (instanceOrCollection == null) {\n          return this.scope;\n        }\n\n        if (instanceOrCollection instanceof Array) {\n          collection = instanceOrCollection;\n          (base1 = this.scope).data || (base1.data = []);\n          collection.forEach(instance => {\n            return this.toJSON(instance, options);\n          });\n        } else {\n          instance = instanceOrCollection;\n          added = true;\n          model = {\n            id: this.id(instance),\n            type: this.type,\n            attributes: this.attributes(instance)\n          };\n\n          if (model.id === void 0) {\n            delete model.id;\n          }\n\n          relationships = this.buildRelationships(instance);\n\n          if (relationships != null) {\n            model.relationships = relationships;\n          }\n\n          links = this.buildSelfLink(instance);\n\n          if (links != null) {\n            model.links = links;\n          }\n\n          if (options.include) {\n            (base2 = this.scope).included || (base2.included = []);\n\n            if (!utils.any(this.scope.included.concat(this.scope.data), function (i) {\n              return i.id === model.id && i.type === model.type;\n            })) {\n              this.scope.included.push(model);\n            } else {\n              added = false;\n            }\n          } else if (this.scope.data != null) {\n            if (!(this.scope.data instanceof Array && utils.any(this.scope.data, function (i) {\n              return i.id === model.id;\n            }))) {\n              this.scope.data.push(model);\n            } else {\n              added = false;\n            }\n          } else {\n            this.scope.data = model;\n          }\n\n          if (added) {\n            this.includeRelationships(this.scope, instance);\n          }\n        }\n\n        return this.scope;\n      }\n\n      render(instanceOrCollection, options) {\n        if (utils.isPromise(instanceOrCollection)) {\n          return instanceOrCollection.then(data => {\n            return this.toJSON(data, options);\n          });\n        } else {\n          return this.toJSON(instanceOrCollection, options);\n        }\n      }\n\n      static toJSON() {\n        return new this().toJSON(...arguments);\n      }\n\n      static render() {\n        return new this().render(...arguments);\n      }\n\n    }\n\n    ;\n\n    buildLinks = function (link) {\n      if (link == null) {\n        return;\n      }\n\n      if (link.self != null || link.related != null) {\n        return link;\n      } else {\n        return {\n          self: link\n        };\n      }\n    };\n\n    Presenter.adapter = adapter;\n    Presenter.prototype.type = 'objects';\n    return Presenter;\n  }.call(this);\n\n  return module.exports = Presenter;\n};","map":{"version":3,"names":["module","exports","utils","adapter","Presenter","buildLinks","constructor","scope","id","instance","selfLinks","links","relationships","attributes","key","clone","get","includeRelationships","data","factory","presenter","results","Error","type","call","push","toJSON","include","buildRelationships","build","buildData","rels","d","prototype","rel","Array","map","buildSelfLink","instanceOrCollection","options","added","base","base1","base2","collection","model","meta","forEach","included","any","concat","i","render","isPromise","then","arguments","link","self","related"],"sources":["/home/getssh/dice_game/node_modules/yayson/lib/yayson/presenter.js"],"sourcesContent":["module.exports = function(utils, adapter) {\n  var Presenter;\n  Presenter = (function() {\n    var buildLinks;\n\n    class Presenter {\n      constructor(scope = {}) {\n        this.scope = scope;\n      }\n\n      id(instance) {\n        return this.constructor.adapter.id(instance);\n      }\n\n      selfLinks(instance) {}\n\n      links() {}\n\n      relationships() {}\n\n      attributes(instance) {\n        var attributes, key, relationships;\n        if (instance == null) {\n          return null;\n        }\n        attributes = utils.clone(this.constructor.adapter.get(instance));\n        delete attributes['id'];\n        relationships = this.relationships();\n        for (key in relationships) {\n          delete attributes[key];\n        }\n        return attributes;\n      }\n\n      includeRelationships(scope, instance) {\n        var data, factory, key, presenter, relationships, results;\n        relationships = this.relationships();\n        results = [];\n        for (key in relationships) {\n          factory = relationships[key] || (function() {\n            throw new Error(`Presenter for ${key} in ${this.type} is not defined`);\n          }).call(this);\n          presenter = new factory(scope);\n          data = this.constructor.adapter.get(instance, key);\n          if (data != null) {\n            results.push(presenter.toJSON(data, {\n              include: true\n            }));\n          } else {\n            results.push(void 0);\n          }\n        }\n        return results;\n      }\n\n      buildRelationships(instance) {\n        var build, buildData, data, key, links, presenter, relationships, rels;\n        if (instance == null) {\n          return null;\n        }\n        rels = this.relationships();\n        links = this.links(instance) || {};\n        relationships = null;\n        for (key in rels) {\n          data = this.constructor.adapter.get(instance, key);\n          presenter = rels[key];\n          buildData = (d) => {\n            return data = {\n              id: this.constructor.adapter.id(d),\n              type: presenter.prototype.type\n            };\n          };\n          build = (d) => {\n            var rel;\n            rel = {};\n            if (d != null) {\n              rel.data = buildData(d);\n            }\n            if (links[key] != null) {\n              rel.links = buildLinks(links[key]);\n            } else if (d == null) {\n              rel.data = null;\n            }\n            return rel;\n          };\n          relationships || (relationships = {});\n          relationships[key] || (relationships[key] = {});\n          if (data instanceof Array) {\n            relationships[key].data = data.map(buildData);\n            if (links[key] != null) {\n              relationships[key].links = buildLinks(links[key]);\n            }\n          } else {\n            relationships[key] = build(data);\n          }\n        }\n        return relationships;\n      }\n\n      buildSelfLink(instance) {\n        return buildLinks(this.selfLinks(instance));\n      }\n\n      toJSON(instanceOrCollection, options = {}) {\n        var added, base, base1, base2, collection, instance, links, model, relationships;\n        if (options.meta != null) {\n          this.scope.meta = options.meta;\n        }\n        if (options.links != null) {\n          this.scope.links = options.links;\n        }\n        (base = this.scope).data || (base.data = null);\n        if (instanceOrCollection == null) {\n          return this.scope;\n        }\n        if (instanceOrCollection instanceof Array) {\n          collection = instanceOrCollection;\n          (base1 = this.scope).data || (base1.data = []);\n          collection.forEach((instance) => {\n            return this.toJSON(instance, options);\n          });\n        } else {\n          instance = instanceOrCollection;\n          added = true;\n          model = {\n            id: this.id(instance),\n            type: this.type,\n            attributes: this.attributes(instance)\n          };\n          if (model.id === void 0) {\n            delete model.id;\n          }\n          relationships = this.buildRelationships(instance);\n          if (relationships != null) {\n            model.relationships = relationships;\n          }\n          links = this.buildSelfLink(instance);\n          if (links != null) {\n            model.links = links;\n          }\n          if (options.include) {\n            (base2 = this.scope).included || (base2.included = []);\n            if (!utils.any(this.scope.included.concat(this.scope.data), function(i) {\n              return i.id === model.id && i.type === model.type;\n            })) {\n              this.scope.included.push(model);\n            } else {\n              added = false;\n            }\n          } else if (this.scope.data != null) {\n            if (!(this.scope.data instanceof Array && utils.any(this.scope.data, function(i) {\n              return i.id === model.id;\n            }))) {\n              this.scope.data.push(model);\n            } else {\n              added = false;\n            }\n          } else {\n            this.scope.data = model;\n          }\n          if (added) {\n            this.includeRelationships(this.scope, instance);\n          }\n        }\n        return this.scope;\n      }\n\n      render(instanceOrCollection, options) {\n        if (utils.isPromise(instanceOrCollection)) {\n          return instanceOrCollection.then((data) => {\n            return this.toJSON(data, options);\n          });\n        } else {\n          return this.toJSON(instanceOrCollection, options);\n        }\n      }\n\n      static toJSON() {\n        return (new this).toJSON(...arguments);\n      }\n\n      static render() {\n        return (new this).render(...arguments);\n      }\n\n    };\n\n    buildLinks = function(link) {\n      if (link == null) {\n        return;\n      }\n      if ((link.self != null) || (link.related != null)) {\n        return link;\n      } else {\n        return {\n          self: link\n        };\n      }\n    };\n\n    Presenter.adapter = adapter;\n\n    Presenter.prototype.type = 'objects';\n\n    return Presenter;\n\n  }).call(this);\n  return module.exports = Presenter;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}